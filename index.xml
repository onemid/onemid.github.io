<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Nothing to Do</title>
    <link>https://onemid.github.io/</link>
    <description>Recent content on Nothing to Do</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-tw</language>
    <lastBuildDate>Sat, 25 Aug 2018 18:01:37 +0800</lastBuildDate>
    
	<atom:link href="https://onemid.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Julia isequal() 和 ==</title>
      <link>https://onemid.github.io/blog/julia-equal-comparison/</link>
      <pubDate>Sat, 25 Aug 2018 18:01:37 +0800</pubDate>
      
      <guid>https://onemid.github.io/blog/julia-equal-comparison/</guid>
      <description>isequal() 和 == 本執行環境：Julia 1.0
在 Julia 裡面，isequal()和==表面上看起來都是比較兩者是否相等；但其實裡面還是有些微的差距：isequal(a, b)隱含著hash(a)及hash(b)是否相等。在浮點數（包含NaN）、遺失值（Missing）中，兩者處理狀況有差距。根據文件所述，isequal會視0.0與-0.0為不同，NaN永遠與其他NaN相同，missing也是。
isequal() 文件：https://docs.julialang.org/en/v1/base/base/#Base.isequal
== 文件：https://docs.julialang.org/en/v1/base/math/#Base.:==
比較 正零與負零    指令 結果？ 指令 結果？     isequal(0.0, -0.0) false 0.0 == -0.0 true   isequal(0, -0) true 0 == -0 true   isequal(0.0, -0) true 0.0 == -0 true    julia&amp;gt; hash(0) 0x77cfa1eef01bca90 julia&amp;gt; hash(-0) 0x77cfa1eef01bca90 julia&amp;gt; hash(0.0) 0x77cfa1eef01bca90 julia&amp;gt; hash(-0.0) 0x3be7d0f7780de548  Missing 們    指令 結果？ 指令 結果？     isequal(missing, missing) true missing == missing missing   isequal(Missing, Missing) true Missing == Missing true   isequal(missing, Missing) false missing == Missing missing   isequal(missing, 3) false missing == 3 missing    julia&amp;gt; typeof(missing) Missing julia&amp;gt; typeof(Missing) DataType  NaN 們    指令 結果？ 指令 結果？     isequal(NaN, NaN) true NaN == NaN false   isequal([1 NaN], [1 NaN]) true [1 NaN] == [1 NaN] false   isequal(NaN, NaN32) true NaN == NaN32 false    julia&amp;gt; hash(NaN) 0x15d7d083d04ecb90 julia&amp;gt; hash(NaN16) 0x15d7d083d04ecb90 julia&amp;gt; hash(NaN32) 0x15d7d083d04ecb90 julia&amp;gt; hash(NaN64) 0x15d7d083d04ecb90  不管哪一種NaNhash 值都一樣；同樣出現在Inf中，不管是Inf16、Inf32、Inf64皆為0x807bb202c9cbfc6f，而負無限大者皆為0x96e782fc7639e1bc。</description>
    </item>
    
    <item>
      <title>Compiling TensorFlow-GPU on Ubuntu 16.04 with CUDA 9.1(9.2) and Python3</title>
      <link>https://onemid.github.io/blog/cuda-and-tf-install/</link>
      <pubDate>Sat, 25 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://onemid.github.io/blog/cuda-and-tf-install/</guid>
      <description>Install CUDA: https://developer.nvidia.com/cuda-downloads?target_os=Linux&amp;amp;target_arch=ppc64le&amp;amp;target_distro=Ubuntu&amp;amp;target_version=1604&amp;amp;target_type=deblocal
 Here, we used &amp;ldquo;Linux&amp;rdquo; -&amp;gt; &amp;ldquo;ppc64le&amp;rdquo;(64-bit) -&amp;gt; &amp;ldquo;16.04&amp;rdquo; -&amp;gt; &amp;ldquo;deb(local)&amp;rdquo;, and downloaded the &amp;ldquo;Base Installer&amp;rdquo; (approx. 1.0GB)
 Following the guidance which given by the nVidia webpage to install the CUDA.
 During installation, the installation program will ask you to create a &amp;ldquo;symbolic link&amp;rdquo; of CUDA library folder; remember to create.
 Create the environment variable to make these work.
  export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda/lib64:/usr/ local/cuda/extras/CUPTI/lib64:/usr/lib/nvidia-381 # Remember that nvidia-381 is the driver version, if you install 390, please modifiy it to nvidia-390 export CUDA_HOME=/usr/local/cuda export PATH=$PATH:/usr/local/cuda/bin   Execute source ~/.</description>
    </item>
    
    <item>
      <title>Hexo Syntax Highlighting (Tested under Tranquilpeak)</title>
      <link>https://onemid.github.io/blog/hexo-syntax-highlighting/</link>
      <pubDate>Thu, 23 Aug 2018 17:24:27 +0000</pubDate>
      
      <guid>https://onemid.github.io/blog/hexo-syntax-highlighting/</guid>
      <description>把這個主題弄 Syntax Highlighting 又是一番折騰，本來想說用prism.js做做，奈何就是在佈景上跟原始的佈景相衝，該高亮顯示的地方也沒有，索性走回頭路用highlight.js
基本上在 Hexo 佈景機制裡面加上一些 Code 就好，根據官網所述：
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;/path/to/styles/default.css&amp;quot;&amp;gt; &amp;lt;script src=&amp;quot;/path/to/highlight.pack.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script&amp;gt;hljs.initHighlightingOnLoad();&amp;lt;/script&amp;gt;  其中/path/to/styles/default.css基本上就是這個highlight.js的佈景即是， https://highlightjs.org/static/demo/ 這裡一票佈景，算是可以輕鬆找到要的。
如果說要用 CDN 的話，可以來這裡 https://cdnjs.com/libraries/highlight.js/ 翻翻，但是官網標配只含標準支援的程式碼 Highlighting 的功能，如果要額外的（比如說想用什麼 Julia 之類的），那得要自己去官網選配或是額外加 CDN，例如：
... &amp;lt;!-- 標準配備 --&amp;gt; &amp;lt;script src=&amp;quot;https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.12.0/highlight.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;!-- 選配 Julia --&amp;gt; &amp;lt;script src=&amp;quot;https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.12.0/languages/julia.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; ...  在 Hexo 佈景機制加上上述的東西，個人是放在 themes/tranquilpeak/layout/_partial/footer.ejs，可以動
比較重要的是，按理改完要在主題目錄下運行npm run prod，讓剛剛編輯的footer.ejs可以產出。
另外一個是，在 Hexo 根目錄下的_config.yml裡面：
... highlight: enable: false ...  記得要把 enable 改成 false，不然會打架。
改完之後，hexo clean和 generate以及deploy記得做ㄛ
後記：使用深色佈景主題時，Tranquilpeak 會讓一些 Token 反白 我當時看到快傻眼了，怎麼那麼難搞阿Q</description>
    </item>
    
    <item>
      <title>Cannot Use Pip3 in MacOS (zlib Dependency Problem)</title>
      <link>https://onemid.github.io/blog/python3-pip3-zlib-in-macos/</link>
      <pubDate>Thu, 23 Aug 2018 09:32:15 +0800</pubDate>
      
      <guid>https://onemid.github.io/blog/python3-pip3-zlib-in-macos/</guid>
      <description>問題描述 在使用 pip3 時，會回應 zlib相關套件的錯誤訊息
簡單解法 開 terminal 打
xcode-select --install
之後再裝
brew install python3
如果先裝 python3 然後再裝 xcode-select 東西的話
brew reinstall python3
就重裝 python3 吧</description>
    </item>
    
    <item>
      <title>zzz我終於把 mathjax 弄進去了</title>
      <link>https://onemid.github.io/blog/testmath/</link>
      <pubDate>Wed, 01 Aug 2018 02:01:00 +0800</pubDate>
      
      <guid>https://onemid.github.io/blog/testmath/</guid>
      <description>無關緊要的後記        我的老天，我花了一個多小時終於東湊西湊把 mathjax 塞進去了
搞到後來我都不知道我在幹嘛
結果 github 上面跟本機看得不一樣
這是 inline $ x^2+x-5=y $
這是隔行 $$ x^2+8 $$ 累死我ㄌ
【2018/8/23 更】
我有試圖用過「hexo-renderer-markdown-it-plus」加「katex」，但是因為又喇了「hexo-math」套件，就形成 inline latex 給 hexo-math 渲染，隔行的 latex 給 katex 渲染。
但是 katex 在我試的時候 x 二次方的 2 跑版了，不得不放棄 katex；所以又換回「hexo-renderer-markdown-it」渲染，再搭配「hexo-math」。
然後在_config.yml安插一小段
math: engine: &#39;mathjax&#39; mathjax: src: &amp;quot;https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-AMS-MML_HTMLorMML&amp;quot; config: tex2jax: inlineMath: [ [&#39;$&#39;,&#39;$&#39;], [&amp;quot;\\(&amp;quot;,&amp;quot;\\)&amp;quot;] ] skipTags: [&#39;script&#39;, &#39;noscript&#39;, &#39;style&#39;, &#39;textarea&#39;, &#39;pre&#39;, &#39;code&#39;] processEscapes: true TeX: equationNumbers: autoNumber: &amp;quot;AMS&amp;quot;  無關緊要的後記 話說，我很想把 *.</description>
    </item>
    
    <item>
      <title>Nginx, MySQL, PHP Installation (Ubuntu 16.04)</title>
      <link>https://onemid.github.io/blog/nginx-mysql-php-installation-ubuntu-16-04/</link>
      <pubDate>Tue, 31 Jul 2018 23:57:00 +0800</pubDate>
      
      <guid>https://onemid.github.io/blog/nginx-mysql-php-installation-ubuntu-16-04/</guid>
      <description>Install the Nginx Web Server $ sudo apt-get update $ sudo apt-get install nginx  請確認防火牆開啟埠號 80 / 443
Install MySQL $ sudo apt-get install mysql-server $ mysql_secure_installation  請遵照指示文字設定
Install PHP for Processing $ sudo apt-get install php-fpm php-mysql  Configure the PHP Processor $ sudo vim /etc/php/7.0/fpm/php.ini  編輯 php.ini 內部數值，先前請解除註解
cgi.fix_pathinfo=0  重新啟動 PHP Processor
$ sudo systemctl restart php7.0-fpm  Configure Nginx to Use the PHP Processor $ sudo vim /etc/nginx/sites-available/default  編輯 default 內部檔案，更動原 server {&amp;hellip;} 區塊為下方區塊</description>
    </item>
    
  </channel>
</rss>