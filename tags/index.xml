<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Nothing to Do</title>
    <link>https://onemid.github.io/tags/</link>
    <description>Recent content on Nothing to Do</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-tw</language>
    <lastBuildDate>Sat, 25 Aug 2018 18:01:37 +0800</lastBuildDate>
    
	<atom:link href="https://onemid.github.io/tags/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Julia isequal() 和 ==</title>
      <link>https://onemid.github.io/blog/julia-equal-comparison/</link>
      <pubDate>Sat, 25 Aug 2018 18:01:37 +0800</pubDate>
      
      <guid>https://onemid.github.io/blog/julia-equal-comparison/</guid>
      <description>isequal() 和 == 本執行環境：Julia 1.0
在 Julia 裡面，isequal()和==表面上看起來都是比較兩者是否相等；但其實裡面還是有些微的差距：isequal(a, b)隱含著hash(a)及hash(b)是否相等。在浮點數（包含NaN）、遺失值（Missing）中，兩者處理狀況有差距。根據文件所述，isequal會視0.0與-0.0為不同，NaN永遠與其他NaN相同，missing也是。
isequal() 文件：https://docs.julialang.org/en/v1/base/base/#Base.isequal
== 文件：https://docs.julialang.org/en/v1/base/math/#Base.:==
比較 正零與負零    指令 結果？ 指令 結果？     isequal(0.0, -0.0) false 0.0 == -0.0 true   isequal(0, -0) true 0 == -0 true   isequal(0.0, -0) true 0.0 == -0 true    julia&amp;gt; hash(0) 0x77cfa1eef01bca90 julia&amp;gt; hash(-0) 0x77cfa1eef01bca90 julia&amp;gt; hash(0.0) 0x77cfa1eef01bca90 julia&amp;gt; hash(-0.0) 0x3be7d0f7780de548  Missing 們    指令 結果？ 指令 結果？     isequal(missing, missing) true missing == missing missing   isequal(Missing, Missing) true Missing == Missing true   isequal(missing, Missing) false missing == Missing missing   isequal(missing, 3) false missing == 3 missing    julia&amp;gt; typeof(missing) Missing julia&amp;gt; typeof(Missing) DataType  NaN 們    指令 結果？ 指令 結果？     isequal(NaN, NaN) true NaN == NaN false   isequal([1 NaN], [1 NaN]) true [1 NaN] == [1 NaN] false   isequal(NaN, NaN32) true NaN == NaN32 false    julia&amp;gt; hash(NaN) 0x15d7d083d04ecb90 julia&amp;gt; hash(NaN16) 0x15d7d083d04ecb90 julia&amp;gt; hash(NaN32) 0x15d7d083d04ecb90 julia&amp;gt; hash(NaN64) 0x15d7d083d04ecb90  不管哪一種NaNhash 值都一樣；同樣出現在Inf中，不管是Inf16、Inf32、Inf64皆為0x807bb202c9cbfc6f，而負無限大者皆為0x96e782fc7639e1bc。</description>
    </item>
    
    <item>
      <title>Cannot Use Pip3 in MacOS (zlib Dependency Problem)</title>
      <link>https://onemid.github.io/blog/python3-pip3-zlib-in-macos/</link>
      <pubDate>Thu, 23 Aug 2018 09:32:15 +0800</pubDate>
      
      <guid>https://onemid.github.io/blog/python3-pip3-zlib-in-macos/</guid>
      <description>問題描述 在使用 pip3 時，會回應 zlib相關套件的錯誤訊息
簡單解法 開 terminal 打
xcode-select --install
之後再裝
brew install python3
如果先裝 python3 然後再裝 xcode-select 東西的話
brew reinstall python3
就重裝 python3 吧</description>
    </item>
    
    <item>
      <title>Cannot Use Pip3 in MacOS (zlib Dependency Problem)</title>
      <link>https://onemid.github.io/blog/python3-pip3-zlib-in-macos/</link>
      <pubDate>Thu, 23 Aug 2018 09:32:15 +0800</pubDate>
      
      <guid>https://onemid.github.io/blog/python3-pip3-zlib-in-macos/</guid>
      <description>問題描述 在使用 pip3 時，會回應 zlib相關套件的錯誤訊息
簡單解法 開 terminal 打
xcode-select --install
之後再裝
brew install python3
如果先裝 python3 然後再裝 xcode-select 東西的話
brew reinstall python3
就重裝 python3 吧</description>
    </item>
    
    <item>
      <title>Nginx, MySQL, PHP Installation (Ubuntu 16.04)</title>
      <link>https://onemid.github.io/blog/nginx-mysql-php-installation-ubuntu-16-04/</link>
      <pubDate>Tue, 31 Jul 2018 23:57:00 +0800</pubDate>
      
      <guid>https://onemid.github.io/blog/nginx-mysql-php-installation-ubuntu-16-04/</guid>
      <description>Install the Nginx Web Server $ sudo apt-get update $ sudo apt-get install nginx  請確認防火牆開啟埠號 80 / 443
Install MySQL $ sudo apt-get install mysql-server $ mysql_secure_installation  請遵照指示文字設定
Install PHP for Processing $ sudo apt-get install php-fpm php-mysql  Configure the PHP Processor $ sudo vim /etc/php/7.0/fpm/php.ini  編輯 php.ini 內部數值，先前請解除註解
cgi.fix_pathinfo=0  重新啟動 PHP Processor
$ sudo systemctl restart php7.0-fpm  Configure Nginx to Use the PHP Processor $ sudo vim /etc/nginx/sites-available/default  編輯 default 內部檔案，更動原 server {&amp;hellip;} 區塊為下方區塊</description>
    </item>
    
    <item>
      <title>Nginx, MySQL, PHP Installation (Ubuntu 16.04)</title>
      <link>https://onemid.github.io/blog/nginx-mysql-php-installation-ubuntu-16-04/</link>
      <pubDate>Tue, 31 Jul 2018 23:57:00 +0800</pubDate>
      
      <guid>https://onemid.github.io/blog/nginx-mysql-php-installation-ubuntu-16-04/</guid>
      <description>Install the Nginx Web Server $ sudo apt-get update $ sudo apt-get install nginx  請確認防火牆開啟埠號 80 / 443
Install MySQL $ sudo apt-get install mysql-server $ mysql_secure_installation  請遵照指示文字設定
Install PHP for Processing $ sudo apt-get install php-fpm php-mysql  Configure the PHP Processor $ sudo vim /etc/php/7.0/fpm/php.ini  編輯 php.ini 內部數值，先前請解除註解
cgi.fix_pathinfo=0  重新啟動 PHP Processor
$ sudo systemctl restart php7.0-fpm  Configure Nginx to Use the PHP Processor $ sudo vim /etc/nginx/sites-available/default  編輯 default 內部檔案，更動原 server {&amp;hellip;} 區塊為下方區塊</description>
    </item>
    
    <item>
      <title>Nginx, MySQL, PHP Installation (Ubuntu 16.04)</title>
      <link>https://onemid.github.io/blog/nginx-mysql-php-installation-ubuntu-16-04/</link>
      <pubDate>Tue, 31 Jul 2018 23:57:00 +0800</pubDate>
      
      <guid>https://onemid.github.io/blog/nginx-mysql-php-installation-ubuntu-16-04/</guid>
      <description>Install the Nginx Web Server $ sudo apt-get update $ sudo apt-get install nginx  請確認防火牆開啟埠號 80 / 443
Install MySQL $ sudo apt-get install mysql-server $ mysql_secure_installation  請遵照指示文字設定
Install PHP for Processing $ sudo apt-get install php-fpm php-mysql  Configure the PHP Processor $ sudo vim /etc/php/7.0/fpm/php.ini  編輯 php.ini 內部數值，先前請解除註解
cgi.fix_pathinfo=0  重新啟動 PHP Processor
$ sudo systemctl restart php7.0-fpm  Configure Nginx to Use the PHP Processor $ sudo vim /etc/nginx/sites-available/default  編輯 default 內部檔案，更動原 server {&amp;hellip;} 區塊為下方區塊</description>
    </item>
    
    <item>
      <title>Nginx, MySQL, PHP Installation (Ubuntu 16.04)</title>
      <link>https://onemid.github.io/blog/nginx-mysql-php-installation-ubuntu-16-04/</link>
      <pubDate>Tue, 31 Jul 2018 23:57:00 +0800</pubDate>
      
      <guid>https://onemid.github.io/blog/nginx-mysql-php-installation-ubuntu-16-04/</guid>
      <description>Install the Nginx Web Server $ sudo apt-get update $ sudo apt-get install nginx  請確認防火牆開啟埠號 80 / 443
Install MySQL $ sudo apt-get install mysql-server $ mysql_secure_installation  請遵照指示文字設定
Install PHP for Processing $ sudo apt-get install php-fpm php-mysql  Configure the PHP Processor $ sudo vim /etc/php/7.0/fpm/php.ini  編輯 php.ini 內部數值，先前請解除註解
cgi.fix_pathinfo=0  重新啟動 PHP Processor
$ sudo systemctl restart php7.0-fpm  Configure Nginx to Use the PHP Processor $ sudo vim /etc/nginx/sites-available/default  編輯 default 內部檔案，更動原 server {&amp;hellip;} 區塊為下方區塊</description>
    </item>
    
  </channel>
</rss>